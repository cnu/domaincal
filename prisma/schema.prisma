generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          BigInt        @id @default(autoincrement())
  email       String        @unique
  password    String
  lastLoginAt DateTime?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime?     @updatedAt
  domains     UserDomains[]

  @@index([email])
}

model Domain {
  id                BigInt        @id @default(autoincrement())
  name              String        @unique
  // Basic domain info
  domainRegistered  Boolean       @default(false)
  whoisServer      String?
  queryTime        DateTime?
  
  // Dates
  domainCreatedDate DateTime?
  domainUpdatedDate DateTime?
  domainExpiryDate  DateTime?
  
  // Registrar information
  registrarIanaId  String?
  registrarName    String?
  registrarWhoisServer String?
  registrarUrl     String?
  
  // Domain status and servers
  nameServers      String[]      @default([])
  domainStatuses   String[]      @default([])
  dnssecStatus     String?
  dnssecDsData     String?
  
  // Raw data
  whoisRawDomain   String?
  whoisRawRegistry String?
  response         Json?
  
  // Metadata
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  lastRefreshedAt  DateTime?
  
  // Relations
  users            UserDomains[]

  @@index([name])
}

model UserDomains {
  id        BigInt   @id @default(autoincrement())
  userId    BigInt
  domainId  BigInt
  createdAt DateTime @default(now())
  domain    Domain   @relation(fields: [domainId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, domainId])
  @@index([userId])
  @@index([domainId])
}
